// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: proto/blackjack/messages.proto

package pb_blackjack

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ViewGamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ViewGamesRequest) Reset() {
	*x = ViewGamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_blackjack_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewGamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewGamesRequest) ProtoMessage() {}

func (x *ViewGamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blackjack_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewGamesRequest.ProtoReflect.Descriptor instead.
func (*ViewGamesRequest) Descriptor() ([]byte, []int) {
	return file_proto_blackjack_messages_proto_rawDescGZIP(), []int{0}
}

type ViewGamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Games []*Game `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
}

func (x *ViewGamesResponse) Reset() {
	*x = ViewGamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_blackjack_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewGamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewGamesResponse) ProtoMessage() {}

func (x *ViewGamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blackjack_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewGamesResponse.ProtoReflect.Descriptor instead.
func (*ViewGamesResponse) Descriptor() ([]byte, []int) {
	return file_proto_blackjack_messages_proto_rawDescGZIP(), []int{1}
}

func (x *ViewGamesResponse) GetGames() []*Game {
	if x != nil {
		return x.Games
	}
	return nil
}

type BlackjackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//
	//	*BlackjackRequest_JoinGame
	//	*BlackjackRequest_StartGame
	//	*BlackjackRequest_Move
	Action isBlackjackRequest_Action `protobuf_oneof:"action"`
}

func (x *BlackjackRequest) Reset() {
	*x = BlackjackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_blackjack_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlackjackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlackjackRequest) ProtoMessage() {}

func (x *BlackjackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blackjack_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlackjackRequest.ProtoReflect.Descriptor instead.
func (*BlackjackRequest) Descriptor() ([]byte, []int) {
	return file_proto_blackjack_messages_proto_rawDescGZIP(), []int{2}
}

func (m *BlackjackRequest) GetAction() isBlackjackRequest_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *BlackjackRequest) GetJoinGame() *JoinGame {
	if x, ok := x.GetAction().(*BlackjackRequest_JoinGame); ok {
		return x.JoinGame
	}
	return nil
}

func (x *BlackjackRequest) GetStartGame() *StartGame {
	if x, ok := x.GetAction().(*BlackjackRequest_StartGame); ok {
		return x.StartGame
	}
	return nil
}

func (x *BlackjackRequest) GetMove() *BlackjackMove {
	if x, ok := x.GetAction().(*BlackjackRequest_Move); ok {
		return x.Move
	}
	return nil
}

type isBlackjackRequest_Action interface {
	isBlackjackRequest_Action()
}

type BlackjackRequest_JoinGame struct {
	JoinGame *JoinGame `protobuf:"bytes,1,opt,name=joinGame,proto3,oneof"`
}

type BlackjackRequest_StartGame struct {
	StartGame *StartGame `protobuf:"bytes,2,opt,name=startGame,proto3,oneof"`
}

type BlackjackRequest_Move struct {
	Move *BlackjackMove `protobuf:"bytes,3,opt,name=move,proto3,oneof"`
}

func (*BlackjackRequest_JoinGame) isBlackjackRequest_Action() {}

func (*BlackjackRequest_StartGame) isBlackjackRequest_Action() {}

func (*BlackjackRequest_Move) isBlackjackRequest_Action() {}

type BlackjackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*BlackjackResponse_JoinGame
	//	*BlackjackResponse_BlackjackResult
	Result isBlackjackResponse_Result `protobuf_oneof:"result"`
}

func (x *BlackjackResponse) Reset() {
	*x = BlackjackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_blackjack_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlackjackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlackjackResponse) ProtoMessage() {}

func (x *BlackjackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blackjack_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlackjackResponse.ProtoReflect.Descriptor instead.
func (*BlackjackResponse) Descriptor() ([]byte, []int) {
	return file_proto_blackjack_messages_proto_rawDescGZIP(), []int{3}
}

func (m *BlackjackResponse) GetResult() isBlackjackResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *BlackjackResponse) GetJoinGame() *JoinGameResult {
	if x, ok := x.GetResult().(*BlackjackResponse_JoinGame); ok {
		return x.JoinGame
	}
	return nil
}

func (x *BlackjackResponse) GetBlackjackResult() *BlackjackResult {
	if x, ok := x.GetResult().(*BlackjackResponse_BlackjackResult); ok {
		return x.BlackjackResult
	}
	return nil
}

type isBlackjackResponse_Result interface {
	isBlackjackResponse_Result()
}

type BlackjackResponse_JoinGame struct {
	JoinGame *JoinGameResult `protobuf:"bytes,1,opt,name=joinGame,proto3,oneof"`
}

type BlackjackResponse_BlackjackResult struct {
	BlackjackResult *BlackjackResult `protobuf:"bytes,2,opt,name=blackjackResult,proto3,oneof"`
}

func (*BlackjackResponse_JoinGame) isBlackjackResponse_Result() {}

func (*BlackjackResponse_BlackjackResult) isBlackjackResponse_Result() {}

type PlayGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//
	//	*PlayGameRequest_BlackjackMove
	Action isPlayGameRequest_Action `protobuf_oneof:"action"`
}

func (x *PlayGameRequest) Reset() {
	*x = PlayGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_blackjack_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayGameRequest) ProtoMessage() {}

func (x *PlayGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blackjack_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayGameRequest.ProtoReflect.Descriptor instead.
func (*PlayGameRequest) Descriptor() ([]byte, []int) {
	return file_proto_blackjack_messages_proto_rawDescGZIP(), []int{4}
}

func (m *PlayGameRequest) GetAction() isPlayGameRequest_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *PlayGameRequest) GetBlackjackMove() *BlackjackMove {
	if x, ok := x.GetAction().(*PlayGameRequest_BlackjackMove); ok {
		return x.BlackjackMove
	}
	return nil
}

type isPlayGameRequest_Action interface {
	isPlayGameRequest_Action()
}

type PlayGameRequest_BlackjackMove struct {
	BlackjackMove *BlackjackMove `protobuf:"bytes,1,opt,name=blackjackMove,proto3,oneof"`
}

func (*PlayGameRequest_BlackjackMove) isPlayGameRequest_Action() {}

type PlayGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Game *Game `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
}

func (x *PlayGameResponse) Reset() {
	*x = PlayGameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_blackjack_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayGameResponse) ProtoMessage() {}

func (x *PlayGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blackjack_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayGameResponse.ProtoReflect.Descriptor instead.
func (*PlayGameResponse) Descriptor() ([]byte, []int) {
	return file_proto_blackjack_messages_proto_rawDescGZIP(), []int{5}
}

func (x *PlayGameResponse) GetGame() *Game {
	if x != nil {
		return x.Game
	}
	return nil
}

type BlackjackMove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Move:
	//
	//	*BlackjackMove_HitMove
	//	*BlackjackMove_StandMove
	//	*BlackjackMove_DoubleMove
	//	*BlackjackMove_SplitMove
	//	*BlackjackMove_SurrenderMove
	Move isBlackjackMove_Move `protobuf_oneof:"move"`
}

func (x *BlackjackMove) Reset() {
	*x = BlackjackMove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_blackjack_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlackjackMove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlackjackMove) ProtoMessage() {}

func (x *BlackjackMove) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blackjack_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlackjackMove.ProtoReflect.Descriptor instead.
func (*BlackjackMove) Descriptor() ([]byte, []int) {
	return file_proto_blackjack_messages_proto_rawDescGZIP(), []int{6}
}

func (m *BlackjackMove) GetMove() isBlackjackMove_Move {
	if m != nil {
		return m.Move
	}
	return nil
}

func (x *BlackjackMove) GetHitMove() *HitMove {
	if x, ok := x.GetMove().(*BlackjackMove_HitMove); ok {
		return x.HitMove
	}
	return nil
}

func (x *BlackjackMove) GetStandMove() *StandMove {
	if x, ok := x.GetMove().(*BlackjackMove_StandMove); ok {
		return x.StandMove
	}
	return nil
}

func (x *BlackjackMove) GetDoubleMove() *DoubleMove {
	if x, ok := x.GetMove().(*BlackjackMove_DoubleMove); ok {
		return x.DoubleMove
	}
	return nil
}

func (x *BlackjackMove) GetSplitMove() *SplitMove {
	if x, ok := x.GetMove().(*BlackjackMove_SplitMove); ok {
		return x.SplitMove
	}
	return nil
}

func (x *BlackjackMove) GetSurrenderMove() *SurrenderMove {
	if x, ok := x.GetMove().(*BlackjackMove_SurrenderMove); ok {
		return x.SurrenderMove
	}
	return nil
}

type isBlackjackMove_Move interface {
	isBlackjackMove_Move()
}

type BlackjackMove_HitMove struct {
	HitMove *HitMove `protobuf:"bytes,1,opt,name=hitMove,proto3,oneof"`
}

type BlackjackMove_StandMove struct {
	StandMove *StandMove `protobuf:"bytes,2,opt,name=standMove,proto3,oneof"`
}

type BlackjackMove_DoubleMove struct {
	DoubleMove *DoubleMove `protobuf:"bytes,3,opt,name=doubleMove,proto3,oneof"`
}

type BlackjackMove_SplitMove struct {
	SplitMove *SplitMove `protobuf:"bytes,4,opt,name=splitMove,proto3,oneof"`
}

type BlackjackMove_SurrenderMove struct {
	SurrenderMove *SurrenderMove `protobuf:"bytes,5,opt,name=surrenderMove,proto3,oneof"`
}

func (*BlackjackMove_HitMove) isBlackjackMove_Move() {}

func (*BlackjackMove_StandMove) isBlackjackMove_Move() {}

func (*BlackjackMove_DoubleMove) isBlackjackMove_Move() {}

func (*BlackjackMove_SplitMove) isBlackjackMove_Move() {}

func (*BlackjackMove_SurrenderMove) isBlackjackMove_Move() {}

type JoinGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=gameId,proto3" json:"gameId,omitempty"`
}

func (x *JoinGame) Reset() {
	*x = JoinGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_blackjack_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGame) ProtoMessage() {}

func (x *JoinGame) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blackjack_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGame.ProtoReflect.Descriptor instead.
func (*JoinGame) Descriptor() ([]byte, []int) {
	return file_proto_blackjack_messages_proto_rawDescGZIP(), []int{7}
}

func (x *JoinGame) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type JoinGameResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *JoinGameResult) Reset() {
	*x = JoinGameResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_blackjack_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGameResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGameResult) ProtoMessage() {}

func (x *JoinGameResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blackjack_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGameResult.ProtoReflect.Descriptor instead.
func (*JoinGameResult) Descriptor() ([]byte, []int) {
	return file_proto_blackjack_messages_proto_rawDescGZIP(), []int{8}
}

func (x *JoinGameResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type BlackjackResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BlackjackResult) Reset() {
	*x = BlackjackResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_blackjack_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlackjackResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlackjackResult) ProtoMessage() {}

func (x *BlackjackResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blackjack_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlackjackResult.ProtoReflect.Descriptor instead.
func (*BlackjackResult) Descriptor() ([]byte, []int) {
	return file_proto_blackjack_messages_proto_rawDescGZIP(), []int{9}
}

type StartGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartGame) Reset() {
	*x = StartGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_blackjack_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGame) ProtoMessage() {}

func (x *StartGame) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blackjack_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGame.ProtoReflect.Descriptor instead.
func (*StartGame) Descriptor() ([]byte, []int) {
	return file_proto_blackjack_messages_proto_rawDescGZIP(), []int{10}
}

var File_proto_blackjack_messages_proto protoreflect.FileDescriptor

var file_proto_blackjack_messages_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6a, 0x61, 0x63,
	0x6b, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x09, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6a, 0x61, 0x63, 0x6b, 0x1a, 0x1a, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6a, 0x61, 0x63, 0x6b, 0x2f, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x12, 0x0a, 0x10, 0x56, 0x69, 0x65, 0x77, 0x47,
	0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3a, 0x0a, 0x11, 0x56,
	0x69, 0x65, 0x77, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6a, 0x61, 0x63, 0x6b, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x10, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x6a, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x08,
	0x6a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6a, 0x61, 0x63, 0x6b, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x47,
	0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x12,
	0x34, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6a, 0x61, 0x63, 0x6b, 0x2e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6a, 0x61, 0x63, 0x6b, 0x2e,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6a, 0x61, 0x63, 0x6b, 0x4d, 0x6f, 0x76, 0x65, 0x48, 0x00, 0x52,
	0x04, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x9e, 0x01, 0x0a, 0x11, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6a, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6a,
	0x61, 0x63, 0x6b, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x48, 0x00, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x46,
	0x0a, 0x0f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6a, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6a,
	0x61, 0x63, 0x6b, 0x2e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6a, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6a, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x5d, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6a, 0x61, 0x63, 0x6b,
	0x4d, 0x6f, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x6c, 0x61,
	0x63, 0x6b, 0x6a, 0x61, 0x63, 0x6b, 0x2e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6a, 0x61, 0x63, 0x6b,
	0x4d, 0x6f, 0x76, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6a, 0x61, 0x63,
	0x6b, 0x4d, 0x6f, 0x76, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x37, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6a, 0x61, 0x63, 0x6b, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x22, 0xae, 0x02, 0x0a, 0x0d, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x6a, 0x61, 0x63, 0x6b, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x68, 0x69,
	0x74, 0x4d, 0x6f, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6c,
	0x61, 0x63, 0x6b, 0x6a, 0x61, 0x63, 0x6b, 0x2e, 0x48, 0x69, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x48,
	0x00, 0x52, 0x07, 0x68, 0x69, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x4d, 0x6f, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6a, 0x61, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x4d,
	0x6f, 0x76, 0x65, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x4d, 0x6f, 0x76, 0x65,
	0x12, 0x37, 0x0a, 0x0a, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6a, 0x61, 0x63, 0x6b,
	0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x64,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x73, 0x70, 0x6c,
	0x69, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62,
	0x6c, 0x61, 0x63, 0x6b, 0x6a, 0x61, 0x63, 0x6b, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x4d, 0x6f,
	0x76, 0x65, 0x48, 0x00, 0x52, 0x09, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x12,
	0x40, 0x0a, 0x0d, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6a, 0x61,
	0x63, 0x6b, 0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65,
	0x48, 0x00, 0x52, 0x0d, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x76,
	0x65, 0x42, 0x06, 0x0a, 0x04, 0x6d, 0x6f, 0x76, 0x65, 0x22, 0x22, 0x0a, 0x08, 0x4a, 0x6f, 0x69,
	0x6e, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x2a, 0x0a,
	0x0e, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x6a, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x0b, 0x0a, 0x09,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x2f, 0x70,
	0x62, 0x5f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6a, 0x61, 0x63, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_blackjack_messages_proto_rawDescOnce sync.Once
	file_proto_blackjack_messages_proto_rawDescData = file_proto_blackjack_messages_proto_rawDesc
)

func file_proto_blackjack_messages_proto_rawDescGZIP() []byte {
	file_proto_blackjack_messages_proto_rawDescOnce.Do(func() {
		file_proto_blackjack_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_blackjack_messages_proto_rawDescData)
	})
	return file_proto_blackjack_messages_proto_rawDescData
}

var file_proto_blackjack_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_blackjack_messages_proto_goTypes = []interface{}{
	(*ViewGamesRequest)(nil),  // 0: blackjack.ViewGamesRequest
	(*ViewGamesResponse)(nil), // 1: blackjack.ViewGamesResponse
	(*BlackjackRequest)(nil),  // 2: blackjack.BlackjackRequest
	(*BlackjackResponse)(nil), // 3: blackjack.BlackjackResponse
	(*PlayGameRequest)(nil),   // 4: blackjack.PlayGameRequest
	(*PlayGameResponse)(nil),  // 5: blackjack.PlayGameResponse
	(*BlackjackMove)(nil),     // 6: blackjack.BlackjackMove
	(*JoinGame)(nil),          // 7: blackjack.JoinGame
	(*JoinGameResult)(nil),    // 8: blackjack.JoinGameResult
	(*BlackjackResult)(nil),   // 9: blackjack.BlackjackResult
	(*StartGame)(nil),         // 10: blackjack.StartGame
	(*Game)(nil),              // 11: blackjack.Game
	(*HitMove)(nil),           // 12: blackjack.HitMove
	(*StandMove)(nil),         // 13: blackjack.StandMove
	(*DoubleMove)(nil),        // 14: blackjack.DoubleMove
	(*SplitMove)(nil),         // 15: blackjack.SplitMove
	(*SurrenderMove)(nil),     // 16: blackjack.SurrenderMove
}
var file_proto_blackjack_messages_proto_depIdxs = []int32{
	11, // 0: blackjack.ViewGamesResponse.games:type_name -> blackjack.Game
	7,  // 1: blackjack.BlackjackRequest.joinGame:type_name -> blackjack.JoinGame
	10, // 2: blackjack.BlackjackRequest.startGame:type_name -> blackjack.StartGame
	6,  // 3: blackjack.BlackjackRequest.move:type_name -> blackjack.BlackjackMove
	8,  // 4: blackjack.BlackjackResponse.joinGame:type_name -> blackjack.JoinGameResult
	9,  // 5: blackjack.BlackjackResponse.blackjackResult:type_name -> blackjack.BlackjackResult
	6,  // 6: blackjack.PlayGameRequest.blackjackMove:type_name -> blackjack.BlackjackMove
	11, // 7: blackjack.PlayGameResponse.game:type_name -> blackjack.Game
	12, // 8: blackjack.BlackjackMove.hitMove:type_name -> blackjack.HitMove
	13, // 9: blackjack.BlackjackMove.standMove:type_name -> blackjack.StandMove
	14, // 10: blackjack.BlackjackMove.doubleMove:type_name -> blackjack.DoubleMove
	15, // 11: blackjack.BlackjackMove.splitMove:type_name -> blackjack.SplitMove
	16, // 12: blackjack.BlackjackMove.surrenderMove:type_name -> blackjack.SurrenderMove
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_blackjack_messages_proto_init() }
func file_proto_blackjack_messages_proto_init() {
	if File_proto_blackjack_messages_proto != nil {
		return
	}
	file_proto_blackjack_game_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_blackjack_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewGamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_blackjack_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewGamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_blackjack_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlackjackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_blackjack_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlackjackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_blackjack_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_blackjack_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayGameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_blackjack_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlackjackMove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_blackjack_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_blackjack_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGameResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_blackjack_messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlackjackResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_blackjack_messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_blackjack_messages_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*BlackjackRequest_JoinGame)(nil),
		(*BlackjackRequest_StartGame)(nil),
		(*BlackjackRequest_Move)(nil),
	}
	file_proto_blackjack_messages_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*BlackjackResponse_JoinGame)(nil),
		(*BlackjackResponse_BlackjackResult)(nil),
	}
	file_proto_blackjack_messages_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*PlayGameRequest_BlackjackMove)(nil),
	}
	file_proto_blackjack_messages_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*BlackjackMove_HitMove)(nil),
		(*BlackjackMove_StandMove)(nil),
		(*BlackjackMove_DoubleMove)(nil),
		(*BlackjackMove_SplitMove)(nil),
		(*BlackjackMove_SurrenderMove)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_blackjack_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_blackjack_messages_proto_goTypes,
		DependencyIndexes: file_proto_blackjack_messages_proto_depIdxs,
		MessageInfos:      file_proto_blackjack_messages_proto_msgTypes,
	}.Build()
	File_proto_blackjack_messages_proto = out.File
	file_proto_blackjack_messages_proto_rawDesc = nil
	file_proto_blackjack_messages_proto_goTypes = nil
	file_proto_blackjack_messages_proto_depIdxs = nil
}
